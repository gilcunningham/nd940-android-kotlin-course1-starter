<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>

        <import type="android.view.View" />

        <variable
            name="viewModel"
            type="com.udacity.shoestore.MainViewModel" />
    </data>

    <!-- Use of constraint layout to horizontally align two buttons and vertically center both
    between two other views -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_margin="@dimen/padding_body">

        <TextView
            android:id="@+id/shoe_details_message"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:paddingBottom="@dimen/padding_body"
            android:text="@string/details_instructions"
            android:textColor="@color/colorAttention"
            android:visibility="@{viewModel.detailsMessageVisibility}"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <!-- A vertically aligned stack of shoe detail views. This could alternatively be removed
        and each view applied with constraints, but the overhead of constraining each view seemed
        like more trouble than constraining with a single layout -->
        <LinearLayout
            android:id="@+id/shoe_details"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:paddingBottom="@dimen/padding_body"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/shoe_details_message">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@{@string/details_name_label(viewModel.shoeDetails.name)}"
                android:textAppearance="@style/BodyText" />

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@{@string/details_company_label(viewModel.shoeDetails.company)}"
                android:textAppearance="@style/BodyText" />

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@{@string/details_size_label(viewModel.shoeDetails.size)}"
                android:textAppearance="@style/BodyText" />

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@{@string/details_description_label(viewModel.shoeDetails.description)}"
                android:textAppearance="@style/BodyText" />

        </LinearLayout>

        <Button
            android:id="@+id/save_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:onClick="@{() -> viewModel.onSave()}"
            android:text="@string/details_save_button"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/shoe_details" />

        <Button
            android:id="@+id/cancel_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:onClick="@{() -> viewModel.onNextScreen()}"
            android:text="@string/details_cancel_button"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/shoe_details" />

        <!-- Like the linear layout above, a vertically aligned stack of shoe text entry views.
        This too could alternatively be removed and each view applied with constraints, but the
        overhead of constraining each view seemed like more trouble than constraining with a single
        layout -->
        <LinearLayout
            android:id="@+id/shoe_inputs"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/save_button">

            <EditText
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginTop="@dimen/padding_body"
                android:autofillHints="@string/details_name_hint"
                android:hint="@string/details_name_hint"
                android:inputType="text"
                android:onTextChanged="@{()->viewModel.onEditUpdate()}"
                android:text="@={viewModel.shoeDetails.name}" />

            <EditText
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:autofillHints="@string/details_company_hint"
                android:hint="@string/details_company_hint"
                android:inputType="text"
                android:onTextChanged="@{()->viewModel.onEditUpdate()}"
                android:text="@={viewModel.shoeDetails.company}" />

            <EditText
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:autofillHints="@string/details_size_hint"
                android:hint="@string/details_size_hint"
                android:inputType="numberDecimal"
                android:onTextChanged="@{()->viewModel.onEditUpdate()}"
                android:text="@={viewModel.shoeDetails.size}" />

            <EditText
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:autofillHints="@string/details_description_hint"
                android:hint="@string/details_description_hint"
                android:inputType="text"
                android:onTextChanged="@{()->viewModel.onEditUpdate()}"
                android:text="@={viewModel.shoeDetails.description}" />

        </LinearLayout>

    </androidx.constraintlayout.widget.ConstraintLayout>

</layout>